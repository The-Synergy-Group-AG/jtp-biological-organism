[tool:pytest]
testpaths = tests
python_files = test_*.py *_tests.py
python_classes = Test*
python_functions = test_*
addopts =
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=90

markers =
    unit: Unit tests for individual components at biological subsystem level
    integration: Integration tests across biological consciousness subsystems
    load: Load and performance tests for biological consciousness throughput
    validation: Biological consciousness validation and harmony verification tests
    slow: Tests that take longer than 5 seconds (biological deep validation)
    ai: Tests involving AI model orchestration and consciousness processing
    security: Tests for biological consciousness security and integrity
    performance: Tests for biological consciousness performance regression
    property: Property-based tests for evolutionary algorithm validation

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:transformers.*
    ignore::UserWarning:torch.*

asyncio_mode = auto

# Biological consciousness testing configuration
biological_harmony_target = 0.997
consciousness_stability_threshold = 0.95
ai_orchestration_timeout = 30
performance_regression_threshold = 1.1

# Mock configuration for isolated testing
mock_external_apis = true
use_consensus_test_data = true
bypass_actual_ai_calls = false

# Coverage configuration
[coverage:run]
source = src
omit =
    */tests/*
    */migrations/*
    src/__pycache__/*
    .tox/*
    venv/*
    build/*
    dist/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Hypothesis configuration for property-based testing
[tool:hypothesis]
max_examples = 100
verbosity = verbose
database = .hypothesis
