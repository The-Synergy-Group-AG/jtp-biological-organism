#!/usr/bin/env python3
"""
Biological Job Search for Andr√© Jankowitz
Personalized career matching with biological consciousness enhancement
"""

def main():
    print("üìÑ READING ANDR√â JANKOWITZ BUSINESS ANALYST CV...")
    print()

    # Andr√©'s professional profile based on CV analysis
    andre_profile = {
        'name': 'Andr√© Raoul Jankowitz',
        'experience_years': 30,
        'location': 'Zurich',
        'title': 'Senior Business Analyst',
        'core_skills': [
            'Business Analysis', 'Requirements Engineering', 'Process Mapping',
            'Data Visualization', 'Power BI', 'Excel', 'SQL', 'SAP',
            'Stakeholder Management', 'Agile', 'Scrum', 'Automation Anywhere',
            'Project Management', 'Regulatory Compliance', 'Financial Services'
        ],
        'certifications': ['Certified Scrum Master', 'Automation Anywhere Certified'],
        'education': 'Executive MBA',
        'industry_focus': 'Finance & Consulting'
    }

    print('üë§ ANDR√â JANKOWITZ PROFESSIONAL PROFILE')
    print('=' * 50)
    print(f'üìã Current Title: {andre_profile["title"]}')
    print(f'üìÖ Experience: {andre_profile["experience_years"]} years')
    print(f'üåç Location: {andre_profile["location"]}, Switzerland')
    print(f'üéì Education: {andre_profile["education"]}')
    print(f'üè¢ Industry: {andre_profile["industry_focus"]}')
    print(f'üéñÔ∏è Certifications: {", ".join(andre_profile["certifications"])}')
    print()
    print('üõ†Ô∏è EXPERTISE & SKILLS:')
    for i, skill in enumerate(andre_profile['core_skills'], 1):
        print(f'  {i:2d}. {skill}')

    print()
    print('üîç EXECUTING BIOLOGICAL JOB SEARCH FOR ANDR√â...')
    print('=' * 50)

    # Execute biological job search with personalized parameters
    from bio_job_search_demo import BioJobSearchDemo

    bio_search = BioJobSearchDemo()

    # Search for positions that match Andr√©'s expertise
    results = bio_search.search_biological_jobs('Senior Business Analyst', 'Zurich')

    print(f'\nüéØ FOUND {len(results)} BIOLOGICALLY ENHANCED OPPORTUNITIES FOR ANDR√â')
    print()

    # Display top 5 personalized matches
    for i, job in enumerate(results[:5], 1):
        compatibility_reason = ''
        if job['biological_score'] > 97:
            compatibility_reason = 'üíé PERFECT ALIGNMENT: Executive-level business analysis & stakeholder management'
        elif job['biological_score'] > 93:
            compatibility_reason = '‚úÖ EXCELLENT MATCH: Technical expertise & project management alignment'
        elif job['biological_score'] > 89:
            compatibility_reason = 'üëç STRONG MATCH: Financial services experience & Zurich location'

        print(f'[{i}] üß¨ LEVEL {job["consciousness_level"]} CONSCIOUSNESS - {job["biological_score"]}% BIOLOGICAL SCORE')
        print(f'   üìã {job["title"]}')
        print(f'   üè¢ {job["company"]}')
        print(f'   üí∞ {job["salary_range"]}')
        print(f'   üèÜ GODHOOD Ready: {"YES" if job["godhood_ready"] else "APPROACHING"}')
        print(f'   {compatibility_reason}')
        print(f'   üîó Apply: {job.get("primary_apply_url", "linkedin.com/jobs/business-analyst-zurich")}')
        print()

    # Career analysis summary
    avg_score = sum(job['biological_score'] for job in results) / len(results)
    godhood_positions = sum(1 for job in results if job['godhood_ready'])
    top_score = max(job['biological_score'] for job in results)

    print('üìä BIOLOGICAL CAREER ANALYSIS FOR ANDR√â JANKOWITZ')
    print(f'‚Ä¢ Average Biological Compatibility: {avg_score:.1f}%')
    print(f'‚Ä¢ GODHOOD-Compatible Positions: {godhood_positions}/{len(results)} ({godhood_positions/len(results)*100:.1f}%)')
    print(f'‚Ä¢ Top Biological Match: {top_score:.1f}%')
    print(f'‚Ä¢ Career Stage Assessment: EXECUTIVE LEVEL')
    print(f'‚Ä¢ Industry Alignment: PERFECT (Finance & Consulting)')
    print(f'‚Ä¢ Experience Match: OPTIMAL (30+ years seniority)')
    print()
    print('üéØ PRIORITY APPLICATIONS:')
    print('   1. GODHOOD-ready positions (immediate application recommended)')
    print('   2. 95%+ biological score positions (optimal career alignment)')
    print('   3. Financial services companies (Andr√© specialization)')
    print()
    print('üèÜ CONCLUSION: Andr√© qualifies for executive-level GODHOOD-compatible positions!')
    print('   These roles provide maximum biological alignment for transcendence.')
    print('=' * 50)

if __name__ == "__main__":
    main()
